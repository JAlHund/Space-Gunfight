local cur_angle = 0
local min_angle = -90
local max_angle = 90
local trend = "down" --up or down
local angle_step = 0

go.property("is_left", true)

local function update_angle(dt)
	if math.abs(angle_step) >= 1 then
		cur_angle = cur_angle + angle_step * dt
		if cur_angle >= max_angle then
			cur_angle = max_angle
		end
		if cur_angle <= min_angle then
			cur_angle = min_angle
		end
		go.set("/left_player_weapon", "euler.z", cur_angle)
		angle_step = angle_step - angle_step * dt
	end

end

local recoil = 10
local bullet_range = 700
local bullet_life_time = 0.5

local function create_bullet()
	local bullet_factory = "/factories#bullet_factory"
	local angle = cur_angle
	local r_z = vmath.quat_rotation_z(math.rad(angle))
	local r = r_z * go.get_rotation()
	local p = go.get_world_position("left_player_weapon") + vmath.rotate(r, vmath.vector3(120, 0, 0))

	print("Create bullet:", math.rad(angle), go.get_rotation().z)

	local bullet = factory.create(bullet_factory, p)

	go.set_rotation(r, msg.url(bullet))

	msg.post(msg.url(nil, bullet, "collision"), "apply_force", {
		force = vmath.vector3(10000, 0, 0),
		position = go.get_world_position(bullet) - vmath.vector3(-35, 0, 0)}
	)
	-- timer.delay(bullet_life_time, false, function()
	--  	go.delete(bullet)
	-- end)
end

function init(self)
	msg.post(".", "acquire_input_focus")
	self.rotation_direction = vmath.vector3(0, 0, 0)
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	update_angle(dt)
	local rotation = go.get_rotation()
	local world_position = go.get_world_position()
	msg.post("#collisionobject", "apply_force", {
		force = vmath.rotate(rotation, self.rotation_direction),
		 position = world_position + vmath.rotate(rotation, vmath.vector3(-10, 10, 0))
	})
	msg.post("#collisionobject", "apply_force", {
		force = vmath.rotate(rotation, -self.rotation_direction),
		 position = world_position + vmath.rotate(rotation, vmath.vector3(10, -10, 0))
	})
	msg.post("@render:", "draw_text", { text = "Rotate using left/right arrow keys", position = vmath.vector3(10, 100, 0) } )
end

function on_message(self, message_id, message, sender)
end

function on_input(self, action_id, action)
	if action_id == hash("left") then
		if action.pressed then
			self.rotation_direction.x = -100
		elseif action.released then
			self.rotation_direction.x = 0
		end
	elseif action_id == hash("right") then
		if action.pressed then
			self.rotation_direction.x = 100
		elseif action.released then
			self.rotation_direction.x = 0
		end
	end

	if action_id == hash("up") then
		if action.pressed or action.repeated then
			angle_step = 60
		end
	elseif action_id == hash("down") then
		if action.pressed or action.repeated then
			angle_step = -60
		end
	end

	if action_id == hash("touch") and action.released then
		print("Click!!!")
		create_bullet()
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
